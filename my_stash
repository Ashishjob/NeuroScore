diff --git a/.DS_Store b/.DS_Store
new file mode 100644
index 0000000..6f3eab8
Binary files /dev/null and b/.DS_Store differ
diff --git a/Assets/gcsDiagram.jpeg b/Assets/gcsDiagram.jpeg
new file mode 100644
index 0000000..8d72060
Binary files /dev/null and b/Assets/gcsDiagram.jpeg differ
diff --git a/Assets/gcsDiagram.png b/Assets/gcsDiagram.png
new file mode 100644
index 0000000..daa739b
Binary files /dev/null and b/Assets/gcsDiagram.png differ
diff --git a/GCS Verbal.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/GCS Verbal.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
index 0000000..94b2795
--- /dev/null
+++ b/GCS Verbal.xcodeproj/project.xcworkspace/contents.xcworkspacedata	
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+</Workspace>
diff --git a/Scrumdinger.xcodeproj/project.pbxproj b/NeuroScore.xcodeproj/project.pbxproj
similarity index 93%
rename from Scrumdinger.xcodeproj/project.pbxproj
rename to NeuroScore.xcodeproj/project.pbxproj
index 4a11d9a..876ab37 100644
--- a/Scrumdinger.xcodeproj/project.pbxproj
+++ b/NeuroScore.xcodeproj/project.pbxproj
@@ -24,7 +24,6 @@
 		2C6621332AA3826E00389822 /* MeetingHeaderView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2C6621322AA3826E00389822 /* MeetingHeaderView.swift */; };
 		2C6621372AA3847100389822 /* 3RD-PARTY-LICENSES in Resources */ = {isa = PBXBuildFile; fileRef = 2C6621352AA3847100389822 /* 3RD-PARTY-LICENSES */; };
 		2C6621392AA3849900389822 /* ScrumProgressViewStyle.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2C6621382AA3849800389822 /* ScrumProgressViewStyle.swift */; };
-		2C66213B2AA3854E00389822 /* LICENSE in Resources */ = {isa = PBXBuildFile; fileRef = 2C66213A2AA3854E00389822 /* LICENSE */; };
 		2C66213D2AA3857700389822 /* ScrumTimer.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2C66213C2AA3857600389822 /* ScrumTimer.swift */; };
 		2C66213F2AA3865400389822 /* MeetingFooterView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2C66213E2AA3865400389822 /* MeetingFooterView.swift */; };
 		2C6621412AA38AAF00389822 /* AVPlayer+Ding.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2C6621402AA38AAF00389822 /* AVPlayer+Ding.swift */; };
@@ -37,7 +36,8 @@
 		2C7826C82AA2166F0026FF2E /* DetailView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2C7826C72AA2166F0026FF2E /* DetailView.swift */; };
 		2C7826CA2AA21F810026FF2E /* DetailEditView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2C7826C92AA21F810026FF2E /* DetailEditView.swift */; };
 		2C7826CC2AA224490026FF2E /* ThemeView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2C7826CB2AA224490026FF2E /* ThemeView.swift */; };
-		2C7826CE2AA2250D0026FF2E /* ThemePicker.swift in Sources */ = {isa = PBXBuildFile; fileRef = 2C7826CD2AA2250D0026FF2E /* ThemePicker.swift */; };
+		460595832B8969A300266847 /* InformationView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 460595822B8969A300266847 /* InformationView.swift */; };
+		460595852B89701500266847 /* DatasetGenerator.swift in Sources */ = {isa = PBXBuildFile; fileRef = 460595842B89701500266847 /* DatasetGenerator.swift */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXFileReference section */
@@ -52,7 +52,7 @@
 		2C46C95F2AA11AD2001C90A1 /* CardView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CardView.swift; sourceTree = "<group>"; };
 		2C46C9612AA11EAF001C90A1 /* TrailingIconLabelStyle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TrailingIconLabelStyle.swift; sourceTree = "<group>"; };
 		2C46C9632AA11FEF001C90A1 /* ScrumsView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ScrumsView.swift; sourceTree = "<group>"; };
-		2C4E868C2A9FA3BA00CEE99A /* Scrumdinger.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Scrumdinger.app; sourceTree = BUILT_PRODUCTS_DIR; };
+		2C4E868C2A9FA3BA00CEE99A /* NeuroScore.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = NeuroScore.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		2C4E868F2A9FA3BA00CEE99A /* ScrumdingerApp.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ScrumdingerApp.swift; sourceTree = "<group>"; };
 		2C4E86912A9FA3BA00CEE99A /* MeetingView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MeetingView.swift; sourceTree = "<group>"; };
 		2C4E86932A9FA3BC00CEE99A /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
@@ -60,7 +60,6 @@
 		2C6621322AA3826E00389822 /* MeetingHeaderView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MeetingHeaderView.swift; sourceTree = "<group>"; };
 		2C6621352AA3847100389822 /* 3RD-PARTY-LICENSES */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = "3RD-PARTY-LICENSES"; sourceTree = "<group>"; };
 		2C6621382AA3849800389822 /* ScrumProgressViewStyle.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = ScrumProgressViewStyle.swift; sourceTree = "<group>"; };
-		2C66213A2AA3854E00389822 /* LICENSE */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = LICENSE; sourceTree = "<group>"; };
 		2C66213C2AA3857600389822 /* ScrumTimer.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = ScrumTimer.swift; sourceTree = "<group>"; };
 		2C66213E2AA3865400389822 /* MeetingFooterView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MeetingFooterView.swift; sourceTree = "<group>"; };
 		2C6621402AA38AAF00389822 /* AVPlayer+Ding.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "AVPlayer+Ding.swift"; sourceTree = "<group>"; };
@@ -73,7 +72,8 @@
 		2C7826C72AA2166F0026FF2E /* DetailView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DetailView.swift; sourceTree = "<group>"; };
 		2C7826C92AA21F810026FF2E /* DetailEditView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DetailEditView.swift; sourceTree = "<group>"; };
 		2C7826CB2AA224490026FF2E /* ThemeView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ThemeView.swift; sourceTree = "<group>"; };
-		2C7826CD2AA2250D0026FF2E /* ThemePicker.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ThemePicker.swift; sourceTree = "<group>"; };
+		460595822B8969A300266847 /* InformationView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = InformationView.swift; sourceTree = "<group>"; };
+		460595842B89701500266847 /* DatasetGenerator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DatasetGenerator.swift; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -98,6 +98,7 @@
 				2C6621472AA38F4A00389822 /* History.swift */,
 				2C6621492AA3979C00389822 /* ScrumStore.swift */,
 				2C66214B2AA39B0800389822 /* ErrorWrapper.swift */,
+				460595842B89701500266847 /* DatasetGenerator.swift */,
 			);
 			path = Models;
 			sourceTree = "<group>";
@@ -107,7 +108,6 @@
 			children = (
 				2C3118232AA49CCE00FF64F1 /* .gitignore */,
 				2C3118222AA499AE00FF64F1 /* README.md */,
-				2C66213A2AA3854E00389822 /* LICENSE */,
 				2C6621352AA3847100389822 /* 3RD-PARTY-LICENSES */,
 				2C4E868E2A9FA3BA00CEE99A /* Scrumdinger */,
 				2C4E868D2A9FA3BA00CEE99A /* Products */,
@@ -117,7 +117,7 @@
 		2C4E868D2A9FA3BA00CEE99A /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				2C4E868C2A9FA3BA00CEE99A /* Scrumdinger.app */,
+				2C4E868C2A9FA3BA00CEE99A /* NeuroScore.app */,
 			);
 			name = Products;
 			sourceTree = "<group>";
@@ -148,7 +148,6 @@
 			children = (
 				2C6621382AA3849800389822 /* ScrumProgressViewStyle.swift */,
 				2C46C9612AA11EAF001C90A1 /* TrailingIconLabelStyle.swift */,
-				2C7826CD2AA2250D0026FF2E /* ThemePicker.swift */,
 				2C4E86912A9FA3BA00CEE99A /* MeetingView.swift */,
 				2C46C95F2AA11AD2001C90A1 /* CardView.swift */,
 				2C46C9632AA11FEF001C90A1 /* ScrumsView.swift */,
@@ -162,6 +161,7 @@
 				2C3118192AA48E2400FF64F1 /* MeetingTimerView.swift */,
 				2C31181B2AA491A700FF64F1 /* SpeakerArc.swift */,
 				2C3118202AA496EC00FF64F1 /* HistoryView.swift */,
+				460595822B8969A300266847 /* InformationView.swift */,
 			);
 			path = Views;
 			sourceTree = "<group>";
@@ -177,9 +177,9 @@
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
-		2C4E868B2A9FA3BA00CEE99A /* Scrumdinger */ = {
+		2C4E868B2A9FA3BA00CEE99A /* NeuroScore */ = {
 			isa = PBXNativeTarget;
-			buildConfigurationList = 2C4E869A2A9FA3BC00CEE99A /* Build configuration list for PBXNativeTarget "Scrumdinger" */;
+			buildConfigurationList = 2C4E869A2A9FA3BC00CEE99A /* Build configuration list for PBXNativeTarget "NeuroScore" */;
 			buildPhases = (
 				2C4E86882A9FA3BA00CEE99A /* Sources */,
 				2C4E86892A9FA3BA00CEE99A /* Frameworks */,
@@ -189,9 +189,9 @@
 			);
 			dependencies = (
 			);
-			name = Scrumdinger;
+			name = NeuroScore;
 			productName = Scrumdinger;
-			productReference = 2C4E868C2A9FA3BA00CEE99A /* Scrumdinger.app */;
+			productReference = 2C4E868C2A9FA3BA00CEE99A /* NeuroScore.app */;
 			productType = "com.apple.product-type.application";
 		};
 /* End PBXNativeTarget section */
@@ -202,14 +202,14 @@
 			attributes = {
 				BuildIndependentTargetsInParallel = 1;
 				LastSwiftUpdateCheck = 1430;
-				LastUpgradeCheck = 1430;
+				LastUpgradeCheck = 1520;
 				TargetAttributes = {
 					2C4E868B2A9FA3BA00CEE99A = {
 						CreatedOnToolsVersion = 14.3.1;
 					};
 				};
 			};
-			buildConfigurationList = 2C4E86872A9FA3BA00CEE99A /* Build configuration list for PBXProject "Scrumdinger" */;
+			buildConfigurationList = 2C4E86872A9FA3BA00CEE99A /* Build configuration list for PBXProject "NeuroScore" */;
 			compatibilityVersion = "Xcode 14.0";
 			developmentRegion = en;
 			hasScannedForEncodings = 0;
@@ -222,7 +222,7 @@
 			projectDirPath = "";
 			projectRoot = "";
 			targets = (
-				2C4E868B2A9FA3BA00CEE99A /* Scrumdinger */,
+				2C4E868B2A9FA3BA00CEE99A /* NeuroScore */,
 			);
 		};
 /* End PBXProject section */
@@ -233,7 +233,6 @@
 			buildActionMask = 2147483647;
 			files = (
 				2C6621442AA38B0000389822 /* ding.wav in Resources */,
-				2C66213B2AA3854E00389822 /* LICENSE in Resources */,
 				2C4E86972A9FA3BC00CEE99A /* Preview Assets.xcassets in Resources */,
 				2C6621372AA3847100389822 /* 3RD-PARTY-LICENSES in Resources */,
 				2C3118242AA49CCE00FF64F1 /* .gitignore in Resources */,
@@ -249,7 +248,6 @@
 			buildActionMask = 2147483647;
 			files = (
 				2C6621482AA38F4A00389822 /* History.swift in Sources */,
-				2C7826CE2AA2250D0026FF2E /* ThemePicker.swift in Sources */,
 				2C6621392AA3849900389822 /* ScrumProgressViewStyle.swift in Sources */,
 				2C66213F2AA3865400389822 /* MeetingFooterView.swift in Sources */,
 				2C31181C2AA491A700FF64F1 /* SpeakerArc.swift in Sources */,
@@ -267,8 +265,10 @@
 				2C46C9622AA11EAF001C90A1 /* TrailingIconLabelStyle.swift in Sources */,
 				2C46C95C2AA1199F001C90A1 /* Theme.swift in Sources */,
 				2C31181F2AA4959800FF64F1 /* SpeechRecognizer.swift in Sources */,
+				460595852B89701500266847 /* DatasetGenerator.swift in Sources */,
 				2C46C9642AA11FEF001C90A1 /* ScrumsView.swift in Sources */,
 				2C4E86922A9FA3BA00CEE99A /* MeetingView.swift in Sources */,
+				460595832B8969A300266847 /* InformationView.swift in Sources */,
 				2C4E86902A9FA3BA00CEE99A /* ScrumdingerApp.swift in Sources */,
 				2C7826CC2AA224490026FF2E /* ThemeView.swift in Sources */,
 				2C46C9602AA11AD2001C90A1 /* CardView.swift in Sources */,
@@ -315,6 +315,7 @@
 				DEBUG_INFORMATION_FORMAT = dwarf;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
 				ENABLE_TESTABILITY = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu11;
 				GCC_DYNAMIC_NO_PIC = NO;
 				GCC_NO_COMMON_BLOCKS = YES;
@@ -375,6 +376,7 @@
 				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
 				ENABLE_NS_ASSERTIONS = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu11;
 				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
@@ -401,6 +403,7 @@
 				CODE_SIGN_STYLE = Automatic;
 				CURRENT_PROJECT_VERSION = 1;
 				DEVELOPMENT_ASSET_PATHS = "\"Scrumdinger/Preview Content\"";
+				DEVELOPMENT_TEAM = Y3YQKGBR82;
 				ENABLE_PREVIEWS = YES;
 				GENERATE_INFOPLIST_FILE = YES;
 				INFOPLIST_KEY_NSMicrophoneUsageDescription = "Audio is recorded to transcribe the meeting. Audio recordings are discarded after transcription.";
@@ -432,6 +435,7 @@
 				CODE_SIGN_STYLE = Automatic;
 				CURRENT_PROJECT_VERSION = 1;
 				DEVELOPMENT_ASSET_PATHS = "\"Scrumdinger/Preview Content\"";
+				DEVELOPMENT_TEAM = Y3YQKGBR82;
 				ENABLE_PREVIEWS = YES;
 				GENERATE_INFOPLIST_FILE = YES;
 				INFOPLIST_KEY_NSMicrophoneUsageDescription = "Audio is recorded to transcribe the meeting. Audio recordings are discarded after transcription.";
@@ -458,7 +462,7 @@
 /* End XCBuildConfiguration section */
 
 /* Begin XCConfigurationList section */
-		2C4E86872A9FA3BA00CEE99A /* Build configuration list for PBXProject "Scrumdinger" */ = {
+		2C4E86872A9FA3BA00CEE99A /* Build configuration list for PBXProject "NeuroScore" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
 				2C4E86982A9FA3BC00CEE99A /* Debug */,
@@ -467,7 +471,7 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		2C4E869A2A9FA3BC00CEE99A /* Build configuration list for PBXNativeTarget "Scrumdinger" */ = {
+		2C4E869A2A9FA3BC00CEE99A /* Build configuration list for PBXNativeTarget "NeuroScore" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
 				2C4E869B2A9FA3BC00CEE99A /* Debug */,
diff --git a/NeuroScore.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/NeuroScore.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
index 0000000..c23fda5
--- /dev/null
+++ b/NeuroScore.xcodeproj/project.xcworkspace/contents.xcworkspacedata
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+   <FileRef
+      location = "self:/Users/ashishjob/Documents/scrumdinger/NeuroScore.xcodeproj">
+   </FileRef>
+</Workspace>
diff --git a/Scrumdinger.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/NeuroScore.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
similarity index 100%
rename from Scrumdinger.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
rename to NeuroScore.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
diff --git a/README.md b/README.md
index b219db2..8b13789 100644
--- a/README.md
+++ b/README.md
@@ -1,33 +1 @@
-<div align="center">
-    <br>
-    <h1>Scrumdinger</h1>
-    <p>
-        <b>Managing your daily scrums</b>
-    </p>
-    <br>
-    <img src="Assets/title_image.png" width="300">
-    <br>
-</div>
 
-## Description
-
-This repository contains all the code for the Scrumdinger app. This app was developed as part of the iOS App Dev Tutorials.
-The reason for working my way through the tutorial series is to get started with modern apps for iOS.
-By finishing this application I was able to learn Swift as well as SwiftUI and get myself familiar with provided features such as "speech to text".
-
-## Notes
-This app/project was only developed for learning purposes. If you want to build this app yourself, I suggest taking a look at the tutorial yourself (see Acknowledgments).
-
-## Author
-Marcus Gugacs
-
-## License
-See LICENSE as well as the 3RD-PARTY-LICENSES file.
-Files provided through the tutorial starter project have a corresponding license notice at the top of the file. 
-
-## Acknowledgments
-Some of the files/samples are provided as part of the starter project by Apple Inc.
-The tutorial can be found [here](https://developer.apple.com/tutorials/app-dev-training)
-
-## Contact
-If you have any questions and want to get in touch with me, just [send me an email](mailto:iimpaq@proton.me)
diff --git a/Scrumdinger.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/Scrumdinger.xcodeproj/project.xcworkspace/contents.xcworkspacedata
index 919434a..94b2795 100644
--- a/Scrumdinger.xcodeproj/project.xcworkspace/contents.xcworkspacedata
+++ b/Scrumdinger.xcodeproj/project.xcworkspace/contents.xcworkspacedata
@@ -1,7 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Workspace
    version = "1.0">
-   <FileRef
-      location = "self:">
-   </FileRef>
 </Workspace>
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/1 1.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/1 1.png
new file mode 100644
index 0000000..d36e1b9
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/1 1.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/1 2.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/1 2.png
new file mode 100644
index 0000000..d36e1b9
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/1 2.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/1.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/1.png
new file mode 100644
index 0000000..d36e1b9
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/1.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/10.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/10.png
new file mode 100644
index 0000000..027a7f0
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/10.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/11.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/11.png
new file mode 100644
index 0000000..8e688b4
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/11.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/12.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/12.png
new file mode 100644
index 0000000..6723218
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/12.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/13.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/13.png
new file mode 100644
index 0000000..50a12fc
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/13.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/14.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/14.png
new file mode 100644
index 0000000..82c3077
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/14.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/15.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/15.png
new file mode 100644
index 0000000..3849e6d
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/15.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/2.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/2.png
new file mode 100644
index 0000000..799d8b2
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/2.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/3.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/3.png
new file mode 100644
index 0000000..8e688b4
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/3.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/4.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/4.png
new file mode 100644
index 0000000..cf119ff
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/4.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/5 1.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/5 1.png
new file mode 100644
index 0000000..69d0f21
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/5 1.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/5.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/5.png
new file mode 100644
index 0000000..69d0f21
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/5.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/6 1.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/6 1.png
new file mode 100644
index 0000000..c3cf2e6
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/6 1.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/6.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/6.png
new file mode 100644
index 0000000..c3cf2e6
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/6.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/7.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/7.png
new file mode 100644
index 0000000..c0678b3
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/7.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/9.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/9.png
new file mode 100644
index 0000000..efb73a1
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/9.png differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon1024@1x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon1024@1x.png
deleted file mode 100644
index 46ca82d..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon1024@1x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@1x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@1x.png
deleted file mode 100644
index f35a225..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@1x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@2x-1.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@2x-1.png
deleted file mode 100644
index cd71898..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@2x-1.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@2x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@2x.png
deleted file mode 100644
index cd71898..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@2x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@3x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@3x.png
deleted file mode 100644
index 7e8ad93..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon20@3x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@1x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@1x.png
deleted file mode 100644
index 2849afd..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@1x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@2x-1.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@2x-1.png
deleted file mode 100644
index 7206490..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@2x-1.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@2x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@2x.png
deleted file mode 100644
index 7206490..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@2x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@3x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@3x.png
deleted file mode 100644
index 44d7670..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon29@3x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@1x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@1x.png
deleted file mode 100644
index 6a8f8be..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@1x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@2x-1.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@2x-1.png
deleted file mode 100644
index 4e9810e..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@2x-1.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@2x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@2x.png
deleted file mode 100644
index 4e9810e..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@2x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@3x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@3x.png
deleted file mode 100644
index 0d3d574..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon40@3x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon60@2x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon60@2x.png
deleted file mode 100644
index 9724b1c..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon60@2x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon60@3x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon60@3x.png
deleted file mode 100644
index 4a25e37..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon60@3x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon76@1x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon76@1x.png
deleted file mode 100644
index f3f637e..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon76@1x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon76@2x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon76@2x.png
deleted file mode 100644
index 3391e7a..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon76@2x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon83.5@2x.png b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon83.5@2x.png
deleted file mode 100644
index 5cbcab7..0000000
Binary files a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/AppIcon83.5@2x.png and /dev/null differ
diff --git a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/Contents.json b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/Contents.json
index 1facbcd..028e2c4 100644
--- a/Scrumdinger/Assets.xcassets/AppIcon.appiconset/Contents.json
+++ b/Scrumdinger/Assets.xcassets/AppIcon.appiconset/Contents.json
@@ -1,109 +1,109 @@
 {
   "images" : [
     {
-      "filename" : "AppIcon20@2x-1.png",
+      "filename" : "1.png",
       "idiom" : "iphone",
       "scale" : "2x",
       "size" : "20x20"
     },
     {
-      "filename" : "AppIcon20@3x.png",
+      "filename" : "2.png",
       "idiom" : "iphone",
       "scale" : "3x",
       "size" : "20x20"
     },
     {
-      "filename" : "AppIcon29@2x-1.png",
+      "filename" : "3.png",
       "idiom" : "iphone",
       "scale" : "2x",
       "size" : "29x29"
     },
     {
-      "filename" : "AppIcon29@3x.png",
+      "filename" : "4.png",
       "idiom" : "iphone",
       "scale" : "3x",
       "size" : "29x29"
     },
     {
-      "filename" : "AppIcon40@2x-1.png",
+      "filename" : "5 1.png",
       "idiom" : "iphone",
       "scale" : "2x",
       "size" : "40x40"
     },
     {
-      "filename" : "AppIcon40@3x.png",
+      "filename" : "6.png",
       "idiom" : "iphone",
       "scale" : "3x",
       "size" : "40x40"
     },
     {
-      "filename" : "AppIcon60@2x.png",
+      "filename" : "6 1.png",
       "idiom" : "iphone",
       "scale" : "2x",
       "size" : "60x60"
     },
     {
-      "filename" : "AppIcon60@3x.png",
+      "filename" : "7.png",
       "idiom" : "iphone",
       "scale" : "3x",
       "size" : "60x60"
     },
     {
-      "filename" : "AppIcon20@1x.png",
+      "filename" : "9.png",
       "idiom" : "ipad",
       "scale" : "1x",
       "size" : "20x20"
     },
     {
-      "filename" : "AppIcon20@2x.png",
+      "filename" : "1 1.png",
       "idiom" : "ipad",
       "scale" : "2x",
       "size" : "20x20"
     },
     {
-      "filename" : "AppIcon29@1x.png",
+      "filename" : "10.png",
       "idiom" : "ipad",
       "scale" : "1x",
       "size" : "29x29"
     },
     {
-      "filename" : "AppIcon29@2x.png",
+      "filename" : "11.png",
       "idiom" : "ipad",
       "scale" : "2x",
       "size" : "29x29"
     },
     {
-      "filename" : "AppIcon40@1x.png",
+      "filename" : "1 2.png",
       "idiom" : "ipad",
       "scale" : "1x",
       "size" : "40x40"
     },
     {
-      "filename" : "AppIcon40@2x.png",
+      "filename" : "5.png",
       "idiom" : "ipad",
       "scale" : "2x",
       "size" : "40x40"
     },
     {
-      "filename" : "AppIcon76@1x.png",
+      "filename" : "12.png",
       "idiom" : "ipad",
       "scale" : "1x",
       "size" : "76x76"
     },
     {
-      "filename" : "AppIcon76@2x.png",
+      "filename" : "13.png",
       "idiom" : "ipad",
       "scale" : "2x",
       "size" : "76x76"
     },
     {
-      "filename" : "AppIcon83.5@2x.png",
+      "filename" : "14.png",
       "idiom" : "ipad",
       "scale" : "2x",
       "size" : "83.5x83.5"
     },
     {
-      "filename" : "AppIcon1024@1x.png",
+      "filename" : "15.png",
       "idiom" : "ios-marketing",
       "scale" : "1x",
       "size" : "1024x1024"
diff --git a/Scrumdinger/Assets.xcassets/Themes/buttercup.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/buttercup.colorset/Contents.json
deleted file mode 100644
index 92c0b5a..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/buttercup.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.588",
-          "green" : "0.945",
-          "red" : "1.000"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.588",
-          "green" : "0.945",
-          "red" : "1.000"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/bubblegum.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/green.colorset/Contents.json
similarity index 76%
rename from Scrumdinger/Assets.xcassets/Themes/bubblegum.colorset/Contents.json
rename to Scrumdinger/Assets.xcassets/Themes/green.colorset/Contents.json
index 849c4cb..968a8b0 100644
--- a/Scrumdinger/Assets.xcassets/Themes/bubblegum.colorset/Contents.json
+++ b/Scrumdinger/Assets.xcassets/Themes/green.colorset/Contents.json
@@ -5,9 +5,9 @@
         "color-space" : "srgb",
         "components" : {
           "alpha" : "1.000",
-          "blue" : "0.820",
-          "green" : "0.502",
-          "red" : "0.933"
+          "blue" : "0x77",
+          "green" : "0xDD",
+          "red" : "0x77"
         }
       },
       "idiom" : "universal"
@@ -23,9 +23,9 @@
         "color-space" : "srgb",
         "components" : {
           "alpha" : "1.000",
-          "blue" : "0.820",
-          "green" : "0.502",
-          "red" : "0.933"
+          "blue" : "0x77",
+          "green" : "0xDD",
+          "red" : "0x77"
         }
       },
       "idiom" : "universal"
diff --git a/Scrumdinger/Assets.xcassets/Themes/indigo.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/indigo.colorset/Contents.json
deleted file mode 100644
index d9daea3..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/indigo.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.443",
-          "green" : "0.000",
-          "red" : "0.212"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.443",
-          "green" : "0.000",
-          "red" : "0.212"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/lavender.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/lavender.colorset/Contents.json
deleted file mode 100644
index f95edce..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/lavender.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "1.000",
-          "green" : "0.808",
-          "red" : "0.812"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "1.000",
-          "green" : "0.808",
-          "red" : "0.812"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/magenta.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/magenta.colorset/Contents.json
deleted file mode 100644
index b20bdf5..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/magenta.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.467",
-          "green" : "0.075",
-          "red" : "0.647"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.467",
-          "green" : "0.075",
-          "red" : "0.647"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/navy.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/navy.colorset/Contents.json
deleted file mode 100644
index 821f22f..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/navy.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.255",
-          "green" : "0.078",
-          "red" : "0.000"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.255",
-          "green" : "0.078",
-          "red" : "0.000"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/orange.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/orange.colorset/Contents.json
deleted file mode 100644
index 863c8c7..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/orange.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.259",
-          "green" : "0.545",
-          "red" : "1.000"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.259",
-          "green" : "0.545",
-          "red" : "1.000"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/oxblood.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/oxblood.colorset/Contents.json
deleted file mode 100644
index 0821af2..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/oxblood.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.043",
-          "green" : "0.027",
-          "red" : "0.290"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.043",
-          "green" : "0.027",
-          "red" : "0.290"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/periwinkle.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/periwinkle.colorset/Contents.json
deleted file mode 100644
index 8d29c91..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/periwinkle.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "1.000",
-          "green" : "0.510",
-          "red" : "0.525"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "1.000",
-          "green" : "0.510",
-          "red" : "0.525"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/purple.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/purple.colorset/Contents.json
deleted file mode 100644
index b19089a..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/purple.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.949",
-          "green" : "0.294",
-          "red" : "0.569"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.949",
-          "green" : "0.294",
-          "red" : "0.569"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/seafoam.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/seafoam.colorset/Contents.json
deleted file mode 100644
index 39065d2..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/seafoam.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.898",
-          "green" : "0.918",
-          "red" : "0.796"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.898",
-          "green" : "0.918",
-          "red" : "0.796"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/sky.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/sky.colorset/Contents.json
deleted file mode 100644
index 91e8248..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/sky.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "1.000",
-          "green" : "0.573",
-          "red" : "0.431"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "1.000",
-          "green" : "0.573",
-          "red" : "0.431"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/tan.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/tan.colorset/Contents.json
deleted file mode 100644
index e42a672..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/tan.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.494",
-          "green" : "0.608",
-          "red" : "0.761"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.494",
-          "green" : "0.608",
-          "red" : "0.761"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/Themes/teal.colorset/Contents.json b/Scrumdinger/Assets.xcassets/Themes/teal.colorset/Contents.json
deleted file mode 100644
index a43d657..0000000
--- a/Scrumdinger/Assets.xcassets/Themes/teal.colorset/Contents.json
+++ /dev/null
@@ -1,38 +0,0 @@
-{
-  "colors" : [
-    {
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.620",
-          "green" : "0.561",
-          "red" : "0.133"
-        }
-      },
-      "idiom" : "universal"
-    },
-    {
-      "appearances" : [
-        {
-          "appearance" : "luminosity",
-          "value" : "dark"
-        }
-      ],
-      "color" : {
-        "color-space" : "srgb",
-        "components" : {
-          "alpha" : "1.000",
-          "blue" : "0.620",
-          "green" : "0.561",
-          "red" : "0.133"
-        }
-      },
-      "idiom" : "universal"
-    }
-  ],
-  "info" : {
-    "author" : "xcode",
-    "version" : 1
-  }
-}
diff --git a/Scrumdinger/Assets.xcassets/gcsDiagram.imageset/Contents.json b/Scrumdinger/Assets.xcassets/gcsDiagram.imageset/Contents.json
new file mode 100644
index 0000000..1b2fd01
--- /dev/null
+++ b/Scrumdinger/Assets.xcassets/gcsDiagram.imageset/Contents.json
@@ -0,0 +1,21 @@
+{
+  "images" : [
+    {
+      "filename" : "gcsDiagram.png",
+      "idiom" : "universal",
+      "scale" : "1x"
+    },
+    {
+      "idiom" : "universal",
+      "scale" : "2x"
+    },
+    {
+      "idiom" : "universal",
+      "scale" : "3x"
+    }
+  ],
+  "info" : {
+    "author" : "xcode",
+    "version" : 1
+  }
+}
diff --git a/Scrumdinger/Assets.xcassets/gcsDiagram.imageset/gcsDiagram.png b/Scrumdinger/Assets.xcassets/gcsDiagram.imageset/gcsDiagram.png
new file mode 100644
index 0000000..daa739b
Binary files /dev/null and b/Scrumdinger/Assets.xcassets/gcsDiagram.imageset/gcsDiagram.png differ
diff --git a/Scrumdinger/Models/AVPlayer+Ding.swift b/Scrumdinger/Models/AVPlayer+Ding.swift
index e136798..767921e 100644
--- a/Scrumdinger/Models/AVPlayer+Ding.swift
+++ b/Scrumdinger/Models/AVPlayer+Ding.swift
@@ -1,7 +1,3 @@
-/*
-See 3RD-PARTY-LICENSES file for this sample’s licensing information.
-*/
-
 import Foundation
 import AVFoundation
 
diff --git a/Scrumdinger/Models/DailyScrum.swift b/Scrumdinger/Models/DailyScrum.swift
index ab9867a..88ab759 100644
--- a/Scrumdinger/Models/DailyScrum.swift
+++ b/Scrumdinger/Models/DailyScrum.swift
@@ -1,10 +1,3 @@
-//
-//  DailyScrum.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 31.08.23.
-//
-
 import Foundation
 
 struct DailyScrum: Identifiable, Codable {
@@ -20,18 +13,70 @@ struct DailyScrum: Identifiable, Codable {
             lengthInMinutes = Int(newValue)
         }
     }
-    var theme: Theme
     var history: [History] = []
+    var date: Date
+    var sideNote: String
+    
+    var theme: Theme {
+            switch totalGcs {
+            case 3...8:
+                return .poppy
+            case 9...12:
+                return .yellow
+            case 13...15:
+                return .green
+            default:
+                return .green // Add a default theme or handle it based on your requirements
+            }
+        }
+    
+    // Add a computed property to get the formatted date string
+    var formattedDate: String {
+        let dateFormatter = DateFormatter()
+        dateFormatter.dateFormat = "MMMM dd, h:mm a"
+        return dateFormatter.string(from: date)
+    }
     
-    init(id: UUID = UUID(), title: String, attendees: [String], lengthInMinutes: Int, theme: Theme) {
+    var gcsVision: String
+        var gcsVerbal: String
+        var gcsMotor: String
+        var totalGcs: Int {
+            let visionScore = Int(gcsVision) ?? 0
+            let verbalScore = Int(gcsVerbal) ?? 0
+            let motorScore = Int(gcsMotor) ?? 0
+            return visionScore + verbalScore + motorScore
+        }
+    
+    init(id: UUID = UUID(), title: String, attendees: [String], lengthInMinutes: Int, theme: Theme, date: Date, gcsVision: String, gcsVerbal: String, gcsMotor: String, sideNote: String) {
         self.id = id
-        self.title = title
-        self.attendees = attendees.map{ Attendee(name: $0) }
+        self.title = date.formattedDate
+        self.attendees = attendees.map { Attendee(name: $0) }
         self.lengthInMinutes = lengthInMinutes
-        self.theme = theme
+        self.date = date
+        self.history = []
+        self.gcsVision = DailyScrum.validateGCSValue(gcsVision, min: 1, max: 4)
+        self.gcsVerbal = DailyScrum.validateGCSValue(gcsVerbal, min: 1, max: 5)
+        self.gcsMotor = DailyScrum.validateGCSValue(gcsMotor, min: 1, max: 6)
+        self.sideNote = sideNote
     }
+    
+    static func validateGCSValue(_ value: String, min: Int, max: Int) -> String {
+            guard let intValue = Int(value), (min...max).contains(intValue) else {
+                return "\(min)"
+            }
+            return value
+        }
 }
 
+extension Date {
+    var formattedDate: String {
+        let dateFormatter = DateFormatter()
+        dateFormatter.dateFormat = "MMMM dd, h:mm a"
+        return dateFormatter.string(from: self)
+    }
+}
+
+
 extension DailyScrum {
     struct Attendee: Identifiable, Codable {
         let id: UUID
@@ -44,23 +89,29 @@ extension DailyScrum {
     }
     
     static var emptyScrum: DailyScrum {
-        DailyScrum(title: "", attendees: [], lengthInMinutes: 5, theme: .sky)
+        DailyScrum(id: UUID(), title: "", attendees: [], lengthInMinutes: 5, theme: .green, date: Date(), gcsVision: "", gcsVerbal: "", gcsMotor: "", sideNote: "")
     }
-}
 
-extension DailyScrum {
     static let sampleData: [DailyScrum] = [
-        DailyScrum(title: "Design",
+        DailyScrum(id: UUID(), title: "Design",
                    attendees: ["Cathy", "Daisy", "Simon", "Jonathan"],
                    lengthInMinutes: 10,
-                   theme: .yellow),
-        DailyScrum(title: "App Dev",
+                   theme: .green,
+                   date: Date(),
+                   gcsVision: "1", gcsVerbal: "2", gcsMotor: "3", sideNote: "Discussion about UI improvements."),
+        DailyScrum(id: UUID(), title: "App Dev",
                    attendees: ["Katie", "Gray", "Euna", "Luis", "Darla"],
                    lengthInMinutes: 5,
-                   theme: .orange),
-        DailyScrum(title: "Web Dev",
+                   theme: .yellow,
+                   date: Date(),
+                   gcsVision: "4", gcsVerbal: "5", gcsMotor: "6", sideNote: "Resolved a critical bug in the backend."),
+        DailyScrum(id: UUID(), title: "Web Dev",
                    attendees: ["Chella", "Chris", "Christina", "Eden", "Karla", "Lindsey", "Aga", "Chad", "Jenn", "Sarah"],
                    lengthInMinutes: 5,
-                   theme: .poppy)
+                   theme: .poppy,
+                   date: Date(),
+                   gcsVision: "7", gcsVerbal: "8", gcsMotor: "9", sideNote: "Deployed the latest version to production.")
     ]
+
+
 }
diff --git a/Scrumdinger/Models/DatasetGenerator.swift b/Scrumdinger/Models/DatasetGenerator.swift
new file mode 100644
index 0000000..1484ff0
--- /dev/null
+++ b/Scrumdinger/Models/DatasetGenerator.swift
@@ -0,0 +1,59 @@
+import Foundation
+import UIKit
+
+extension DailyScrum {
+    static func toCSV() -> String {
+            var csvString = "date,time,gcsVision,gcsVerbal,gcsMotor,totalGCS\n"
+            
+            let dateFormatterDate = DateFormatter()
+            dateFormatterDate.dateFormat = "dd-MM-yyyy"
+            
+            let dateFormatterTime = DateFormatter()
+            dateFormatterTime.dateFormat = "HH:mm"
+            
+            for scrum in sampleData {
+                let formattedDate = dateFormatterDate.string(from: scrum.date)
+                let formattedTime = dateFormatterTime.string(from: scrum.date)
+                let line = "\(formattedDate),\(formattedTime),\(scrum.gcsVision),\(scrum.gcsVerbal),\(scrum.gcsMotor),\(scrum.totalGcs)\n"
+                csvString.append(line)
+            }
+            
+            return csvString
+        }
+    
+    static func saveCSVToFile() {
+        let csvString = toCSV()
+        let filename = "daily_scrums.csv"
+        
+        if let documentsDirectory = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first {
+            let fileURL = documentsDirectory.appendingPathComponent(filename)
+            
+            do {
+                try csvString.write(to: fileURL, atomically: true, encoding: .utf8)
+                print("CSV file saved to: \(fileURL)")
+                showShareSheet(with: fileURL)
+            } catch {
+                print("Error writing CSV file: \(error)")
+            }
+        }
+    }
+    
+    static func generateAndSaveCSV() {
+        saveCSVToFile()
+    }
+    
+    private static func showShareSheet(with fileURL: URL) {
+        guard let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene else {
+            print("Unable to find active UIWindowScene.")
+            return
+        }
+
+        if let rootViewController = windowScene.windows.first?.rootViewController {
+            let activityViewController = UIActivityViewController(activityItems: [fileURL], applicationActivities: nil)
+            rootViewController.present(activityViewController, animated: true, completion: nil)
+        } else {
+            print("Unable to find root view controller.")
+        }
+    }
+
+}
diff --git a/Scrumdinger/Models/ErrorWrapper.swift b/Scrumdinger/Models/ErrorWrapper.swift
index 496acda..0ef5e5a 100644
--- a/Scrumdinger/Models/ErrorWrapper.swift
+++ b/Scrumdinger/Models/ErrorWrapper.swift
@@ -1,10 +1,3 @@
-//
-//  ErrorWrapper.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 02.09.23.
-//
-
 import Foundation
 
 struct ErrorWrapper: Identifiable {
diff --git a/Scrumdinger/Models/History.swift b/Scrumdinger/Models/History.swift
index 40fa288..f2b567a 100644
--- a/Scrumdinger/Models/History.swift
+++ b/Scrumdinger/Models/History.swift
@@ -1,10 +1,3 @@
-//
-//  History.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 02.09.23.
-//
-
 import Foundation
 
 struct History: Identifiable, Codable {
diff --git a/Scrumdinger/Models/ScrumStore.swift b/Scrumdinger/Models/ScrumStore.swift
index a1ac919..91a7847 100644
--- a/Scrumdinger/Models/ScrumStore.swift
+++ b/Scrumdinger/Models/ScrumStore.swift
@@ -1,10 +1,3 @@
-//
-//  ScrumStore.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 02.09.23.
-//
-
 import SwiftUI
 
 @MainActor
diff --git a/Scrumdinger/Models/ScrumTimer.swift b/Scrumdinger/Models/ScrumTimer.swift
index cd54859..24aafbd 100644
--- a/Scrumdinger/Models/ScrumTimer.swift
+++ b/Scrumdinger/Models/ScrumTimer.swift
@@ -1,7 +1,3 @@
-/*
-See 3RD-PARTY-LICENSES file for this sample’s licensing information.
-*/
-
 import Foundation
 
 /// Keeps time for a daily scrum meeting. Keep track of the total meeting time, the time for each speaker, and the name of the current speaker.
diff --git a/Scrumdinger/Models/Theme.swift b/Scrumdinger/Models/Theme.swift
index a7b0454..6a4fb90 100644
--- a/Scrumdinger/Models/Theme.swift
+++ b/Scrumdinger/Models/Theme.swift
@@ -1,34 +1,13 @@
-//
-//  Theme.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 31.08.23.
-//
-
 import SwiftUI
 
 enum Theme: String, CaseIterable, Identifiable, Codable {
-    case bubblegum
-    case buttercup
-    case indigo
-    case lavender
-    case magenta
-    case navy
-    case orange
-    case oxblood
-    case periwinkle
+    case green
     case poppy
-    case purple
-    case seafoam
-    case sky
-    case tan
-    case teal
     case yellow
     
     var accentColor: Color {
         switch self {
-            case .bubblegum, .buttercup, .lavender, .orange, .periwinkle, .poppy, .seafoam, .sky, .tan, .teal, .yellow: return .black
-            case .indigo, .magenta, .navy, .oxblood, .purple: return .white
+        case .green, .poppy, .yellow: return .black
         }
     }
     
diff --git a/Scrumdinger/ScrumdingerApp.swift b/Scrumdinger/ScrumdingerApp.swift
index 0cb7f55..9b0b2da 100644
--- a/Scrumdinger/ScrumdingerApp.swift
+++ b/Scrumdinger/ScrumdingerApp.swift
@@ -1,41 +1,65 @@
-//
-//  ScrumdingerApp.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 30.08.23.
-//
-
 import SwiftUI
 
 @main
 struct ScrumdingerApp: App {
     @StateObject private var store = ScrumStore()
     @State private var errorWrapper: ErrorWrapper?
+    @State private var isLandingScreenVisible = true
     
     var body: some Scene {
         WindowGroup {
-            ScrumsView(scrums: $store.scrums) {
-                Task {
-                    do {
-                        try await store.save(scrums: store.scrums)
-                    } catch {
-                        errorWrapper = ErrorWrapper(error: error,
-                                                    guidance: "Try again later.")
+            if isLandingScreenVisible {
+                LandingScreen()
+                    .onAppear {
+                        DispatchQueue.main.asyncAfter(deadline: .now() + 2) {
+                            withAnimation {
+                                isLandingScreenVisible = false
+                            }
+                        }
+                    }
+            } else {
+                NavigationView {
+                    ScrumsView(scrums: $store.scrums) {
+                        Task {
+                            do {
+                                try await store.save(scrums: store.scrums)
+                            } catch {
+                                errorWrapper = ErrorWrapper(error: error,
+                                                            guidance: "Try again later.")
+                            }
+                        }
+                    }
+                    .sheet(item: $errorWrapper) {
+                        store.scrums = DailyScrum.sampleData
+                    } content: { wrapper in
+                        ErrorView(errorWrapper: wrapper)
                     }
                 }
             }
-            .task {
-                do {
-                    try await store.load()
-                } catch {
-                    errorWrapper = ErrorWrapper(error: error,
-                                                guidance: "Scrumdinger will load sample data and continue.")
-                }
+        }
+    }
+}
+
+struct LandingScreen: View {
+    @Environment(\.colorScheme) var colorScheme
+    @State private var animatedText = ""
+    private let textToAnimate = "Welcome to NeuroScore."
+    private let typingSpeed: TimeInterval = 0.075
+    private let lightGray = Color.gray.opacity(0.5)
+
+    var body: some View {
+        Text(animatedText)
+            .font(.largeTitle)
+            .foregroundColor(colorScheme == .dark ? .white : lightGray)
+            .onAppear {
+                animateText()
             }
-            .sheet(item: $errorWrapper) {
-                store.scrums = DailyScrum.sampleData
-            } content: { wrapper in
-                ErrorView(errorWrapper: wrapper)
+    }
+
+    private func animateText() {
+        for (index, character) in textToAnimate.enumerated() {
+            DispatchQueue.main.asyncAfter(deadline: .now() + Double(index) * typingSpeed) {
+                animatedText.append(character)
             }
         }
     }
diff --git a/Scrumdinger/Views/CardView.swift b/Scrumdinger/Views/CardView.swift
index 29c3fa3..297043f 100644
--- a/Scrumdinger/Views/CardView.swift
+++ b/Scrumdinger/Views/CardView.swift
@@ -1,40 +1,39 @@
-//
-//  CardView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 31.08.23.
-//
-
 import SwiftUI
 
 struct CardView: View {
     let scrum: DailyScrum
+
     var body: some View {
-        VStack(alignment: .leading) {
-            Text(scrum.title)
-                .font(.headline)
+        HStack {
+            VStack {
+                Text("\(scrum.totalGcs)")
+                .font(.title)
+                .fontWeight(.bold)
                 .accessibilityAddTraits(.isHeader)
+            }
+            .padding()
+            Divider().background(Color.black)
+                    .frame(height: 50)
             Spacer()
-            HStack {
-                Label("\(scrum.attendees.count)", systemImage: "person.3")
-                    .accessibilityLabel("\(scrum.attendees.count) attendees")
-                Spacer()
-                Label("\(scrum.lengthInMinutes)", systemImage: "clock")
-                    .accessibilityLabel("\(scrum.lengthInMinutes) minute meeting")
-                    .labelStyle(.trailingIcon)
+
+            VStack(alignment: .leading) {
+                Text(scrum.title)
+                    .font(.headline)
+                    .accessibilityAddTraits(.isHeader)
             }
-            .font(.caption)
+            .padding()
         }
-        .padding()
         .foregroundColor(scrum.theme.accentColor)
+        .background(scrum.theme.mainColor)
     }
 }
 
+
 struct CardView_Previews: PreviewProvider {
-    static var scrum = DailyScrum.sampleData[0]
     static var previews: some View {
-        CardView(scrum: scrum)
+        let scrum = DailyScrum.sampleData[0]
+        return CardView(scrum: scrum)
             .background(scrum.theme.mainColor)
-            .previewLayout(.fixed(width: 400, height: 60))
+            .previewLayout(.fixed(width: 400, height: 80))
     }
 }
diff --git a/Scrumdinger/Views/DetailEditView.swift b/Scrumdinger/Views/DetailEditView.swift
index 6c1cf46..dbf11f9 100644
--- a/Scrumdinger/Views/DetailEditView.swift
+++ b/Scrumdinger/Views/DetailEditView.swift
@@ -1,59 +1,85 @@
-//
-//  DetailEditView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 01.09.23.
-//
-
 import SwiftUI
 
 struct DetailEditView: View {
     @Binding var scrum: DailyScrum
     @State private var newAttendeeName = ""
-    
+    @State private var sideNote = ""
+
     var body: some View {
         Form {
-            Section(header: Text("Meeting Info")) {
+            Section(header: Text("Log Info")) {
                 TextField("Title", text: $scrum.title)
                 HStack {
                     Slider(value: $scrum.lengthInMinutesAsDouble, in: 5...30, step: 1) {
                         Text("Length")
                     }
-                    .accessibilityValue("\(scrum.lengthInMinutes) minutes")
+                    .accessibilityValue("\(scrum.lengthInMinutes)")
                     Spacer()
                     Text("\(scrum.lengthInMinutes) minutes")
                         .accessibilityHidden(true)
                 }
-                ThemePicker(selection: $scrum.theme)
             }
-            Section(header: Text("Attendees")) {
-                ForEach(scrum.attendees) { attendee in
-                    Text(attendee.name)
-                }
-                .onDelete { indices in
-                    scrum.attendees.remove(atOffsets: indices)
+
+            Section(header: Text("GCS Scores")) {
+                TextField("Vision Score", text: Binding(
+                    get: { scrum.gcsVision },
+                    set: { scrum.gcsVision = DailyScrum.validateGCSValue($0, min: 1, max: 4) }
+                ))
+                TextField("Verbal Score", text: Binding(
+                    get: { scrum.gcsVerbal },
+                    set: { scrum.gcsVerbal = DailyScrum.validateGCSValue($0, min: 1, max: 5) }
+                ))
+                TextField("Motor Score", text: Binding(
+                    get: { scrum.gcsMotor },
+                    set: { scrum.gcsMotor = DailyScrum.validateGCSValue($0, min: 1, max: 6) }
+                ))
+            }
+
+            VStack {
+                Spacer()
+                HStack {
+                    Text("Total GCS Score: ").fontWeight(.bold)
+                    Spacer()
                 }
+                Spacer()
+                Spacer()
+                Spacer()
+                Spacer()
+                Spacer()
+                Spacer()
                 HStack {
-                    TextField("New Attendee", text: $newAttendeeName)
-                    Button(action: {
-                        withAnimation {
-                            let attendee = DailyScrum.Attendee(name: newAttendeeName)
-                            scrum.attendees.append(attendee)
-                            newAttendeeName = ""
-                        }
-                    }) {
-                        Image(systemName: "plus.circle.fill")
-                            .accessibilityLabel("Add Attendee")
-                    }
-                    .disabled(newAttendeeName.isEmpty)
+                    Spacer()
+                    Text("\(scrum.totalGcs)")
+                        .font(.system(size: 75, weight: .bold)).underline()
+                    Spacer()
                 }
+                Spacer()
+                Spacer()
+                Spacer()
+                Spacer()
+                Spacer()
+                Spacer()
             }
+            
+            Section(header: Text("Side Note")) {
+                TextField("Enter Side Notes", text: $sideNote)
+            }
+        }
+        .onDisappear {
+            scrum.sideNote = sideNote
         }
+        .navigationBarTitle(Text("Add GCS Score"))
     }
 }
 
 struct DetailEditView_Previews: PreviewProvider {
     static var previews: some View {
-        DetailEditView(scrum: .constant(DailyScrum.sampleData[0]))
+        let scrum = DailyScrum.sampleData[0]
+        return NavigationView {
+            DetailEditView(scrum: .constant(scrum))
+                .background(scrum.theme.mainColor)
+        }
+        .navigationViewStyle(StackNavigationViewStyle())
+        .previewLayout(.fixed(width: 400, height: 600))
     }
 }
diff --git a/Scrumdinger/Views/DetailView.swift b/Scrumdinger/Views/DetailView.swift
index 64c4cac..fa7d938 100644
--- a/Scrumdinger/Views/DetailView.swift
+++ b/Scrumdinger/Views/DetailView.swift
@@ -1,51 +1,46 @@
-//
-//  DetailView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 01.09.23.
-//
-
 import SwiftUI
 
 struct DetailView: View {
     @Binding var scrum: DailyScrum
-    
     @State private var editingScrum = DailyScrum.emptyScrum
     @State private var isPresentingEditView = false
-    
+
     var body: some View {
         List {
-            Section(header: Text("Meeting Info")) {
+            Section(header: Text("Log Info")) {
                 NavigationLink(destination: MeetingView(scrum: $scrum)) {
-                    Label("Start Meeting", systemImage: "timer")
+                    Label("Start Recording", systemImage: "timer")
                         .font(.headline)
                         .foregroundColor(.accentColor)
                 }
+            }
+
+            Section(header: Text("GCS Scores")) {
                 HStack {
-                    Label("Length", systemImage: "clock")
+                    Text("Vision:")
                     Spacer()
-                    Text("\(scrum.lengthInMinutes) minutes")
+                    Text("\(scrum.gcsVision)")
                 }
-                .accessibilityElement(children: .combine)
                 HStack {
-                    Label("Theme", systemImage: "paintpalette")
+                    Text("Verbal:")
                     Spacer()
-                    Text(scrum.theme.name)
-                        .padding(4)
-                        .foregroundColor(scrum.theme.accentColor)
-                        .background(scrum.theme.mainColor)
-                        .cornerRadius(4)
+                    Text("\(scrum.gcsVerbal)")
                 }
-                .accessibilityElement(children: .combine)
-            }
-            Section(header: Text("Attendees")) {
-                ForEach(scrum.attendees) { attendee in
-                    Label(attendee.name, systemImage: "person")
+                HStack {
+                    Text("Motor:")
+                    Spacer()
+                    Text("\(scrum.gcsMotor)")
+                }
+                HStack {
+                    Text("Total GCS:")
+                    Spacer()
+                    Text("\(scrum.totalGcs)")
                 }
             }
+
             Section(header: Text("History")) {
                 if scrum.history.isEmpty {
-                    Label("No meetings yet", systemImage: "calendar.badge.exclamationmark")
+                    Label("No transcriptions yet", systemImage: "calendar.badge.exclamationmark")
                 }
                 ForEach(scrum.history) { history in
                     NavigationLink(destination: HistoryView(history: history)) {
@@ -55,18 +50,28 @@ struct DetailView: View {
                         }
                     }
                 }
+                
             }
-        }
-        .navigationTitle(scrum.title)
-        .toolbar {
-            Button("Edit") {
-                isPresentingEditView = true
-                editingScrum = scrum
+            VStack {
+                HStack {
+                    Text("Side Note:")
+                    Spacer()
+                }
+                Spacer()
+                HStack {
+                    Text("\(scrum.sideNote)")
+                        .foregroundColor(.secondary)
+                    Spacer()
+                }
+                
+                .padding(.bottom, 10)
             }
+            .padding(.top, 10)
         }
+        .navigationTitle(scrum.title)
         .sheet(isPresented: $isPresentingEditView) {
             NavigationStack {
-                DetailEditView(scrum: $editingScrum)
+                DetailEditView(scrum: $scrum)
                     .navigationTitle(scrum.title)
                     .toolbar {
                         ToolbarItem(placement: .cancellationAction) {
@@ -90,7 +95,6 @@ struct DetailView_Previews: PreviewProvider {
     static var previews: some View {
         NavigationStack {
             DetailView(scrum: .constant(DailyScrum.sampleData[0]))
-            
         }
     }
 }
diff --git a/Scrumdinger/Views/ErrorView.swift b/Scrumdinger/Views/ErrorView.swift
index 9e806d1..70d2853 100644
--- a/Scrumdinger/Views/ErrorView.swift
+++ b/Scrumdinger/Views/ErrorView.swift
@@ -1,10 +1,3 @@
-//
-//  ErrorView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 02.09.23.
-//
-
 import SwiftUI
 
 struct ErrorView: View {
diff --git a/Scrumdinger/Views/HistoryView.swift b/Scrumdinger/Views/HistoryView.swift
index c846f66..86ca4c6 100644
--- a/Scrumdinger/Views/HistoryView.swift
+++ b/Scrumdinger/Views/HistoryView.swift
@@ -1,10 +1,3 @@
-//
-//  HistoryView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 03.09.23.
-//
-
 import SwiftUI
 
 struct HistoryView: View {
diff --git a/Scrumdinger/Views/InformationView.swift b/Scrumdinger/Views/InformationView.swift
new file mode 100644
index 0000000..9788b98
--- /dev/null
+++ b/Scrumdinger/Views/InformationView.swift
@@ -0,0 +1,138 @@
+import SwiftUI
+let lightgray = Color(red: 60/255, green: 71/255, blue: 72/255)
+
+struct InformationView: View {
+    @Environment(\.colorScheme) var colorScheme
+    var body: some View {
+        ScrollView {
+            VStack(alignment: .leading, spacing: 20) {
+                Text("What is the Glasgow Coma Scale (GCS)?")
+                    .font(.title)
+                    .fontWeight(.bold)
+                    .foregroundColor(colorScheme == .dark ? .white : lightgray)
+                    .padding(.bottom, 10)
+
+                Text("Definition:")
+                    .font(.title)
+                    .fontWeight(.bold)
+                    .foregroundColor(colorScheme == .dark ? .white : lightgray)
+                    .padding(.top, 5)
+                
+                Text("It’s a scale used to measure the extent of impaired consciousness in trauma (TBI) patients, and it looks at 3 aspects of active responsiveness: vision, verbal, and motor; the scores from each add up to the total Glasgow Coma Score (3 - 15 points)")
+                    .font(.body)
+                    .foregroundColor(.secondary)
+                
+                Image("gcsDiagram")
+                    .resizable()
+                    .scaledToFit()
+                    .frame(maxWidth: .infinity)
+                    .padding(.top, 20)
+
+                GCSComponentView(title: "Vision [eye-opening response]:", image: "eye.fill", options: [
+                    "1 : No eye opening",
+                    "2 : Eye opening to pain",
+                    "3 : Eye opening to sound",
+                    "4 : Eyes open spontaneously"
+                ])
+
+                GCSComponentView(title: "Verbal [verbal response to speech]:", image: "mouth.fill", options: [
+                    "1 : No verbal response",
+                    "2 : Incomprehensible sounds",
+                    "3 : Inappropriate words",
+                    "4 : Confused",
+                    "5 : Orientated"
+                ])
+
+                GCSComponentView(title: "Motor [physical responses]:", image: "hand.raised.fill", options: [
+                    "1 : No motor response",
+                    "2 : Abnormal extension to pain",
+                    "3 : Abnormal flexion to pain",
+                    "4 : Withdrawal from pain",
+                    "5 : Localizing pain",
+                    "6 : Obeys commands"
+                ])
+                
+                Text("Why does the GCS Test matter?")
+                    .font(.title)
+                    .fontWeight(.bold)
+                    .foregroundColor(colorScheme == .dark ? .white : lightgray)
+                    .padding(.top, 5)
+
+                Text("GCS helps with early management of patients and is critical in monitoring the clinical course of a patient and guiding changes in management")
+                    .font(.body)
+                    .foregroundColor(.secondary)
+                
+                Text("How accurate is this test?")
+                    .font(.title)
+                    .fontWeight(.bold)
+                    .foregroundColor(colorScheme == .dark ? .white : lightgray)
+                    .padding(.top, 5)
+
+                Text("The Glasgow Coma Scale's accuracy can be affected by factors such as language barriers, hearing loss, and intellectual/neurological deficits. Intubation, sedation, and specific injuries like orbital/cranial fractures and spinal cord damage may limit GCS responses. Hypoxic-ischemic encephalopathy can also impact assessments.")
+                    .font(.body)
+                    .foregroundColor(Color.secondary)
+                    .padding(.top, 10)
+
+                Text("Ultimately, the score is usually not calculated if any of the 3 parts of the GCS test cannot be appropriately obtained, as it would skew the score too far negative.")
+                    .font(.body)
+                    .foregroundColor(.secondary)
+
+                Text("Learn More:")
+                    .font(.title)
+                    .fontWeight(.bold)
+                    .foregroundColor(colorScheme == .dark ? .white : lightgray)
+                    .padding(.top, 20)
+                
+                Link("Glasgow Coma Scale - StatPearls - NCBI Bookshelf", destination: URL(string: "https://www.ncbi.nlm.nih.gov/books/NBK513298/")!)
+                    .font(.body)
+                    .foregroundColor(colorScheme == .dark ? .white : lightgray)
+                    .padding(.top, 5)
+
+                Text("The information provided here is for educational purposes only and is not intended as medical advice. Consult a medical professional for personalized advice.")
+                    .font(.caption)
+                    .foregroundColor(.gray)
+                    .padding(.top, 20)
+            }
+            .padding()
+        }
+    }
+}
+
+struct GCSComponentView: View {
+    @Environment(\.colorScheme) var colorScheme
+
+    var title: String
+    var image: String
+    var options: [String]
+
+    var body: some View {
+        VStack(alignment: .leading, spacing: 10) {
+            HStack {
+                Image(systemName: image)
+                    .foregroundColor(colorScheme == .dark ? .white : lightgray)
+                    .imageScale(.medium)
+                Text(title)
+                    .font(.title3)
+                    .foregroundColor(colorScheme == .dark ? .white : lightgray)
+            }
+            ForEach(options, id: \.self) { option in
+                HStack {
+                    Spacer().frame(width: 20) // Additional indentation
+                    Text("‐")
+                        .font(.body)
+                        .foregroundColor(colorScheme == .dark ? .white : lightgray)
+                    Text(option)
+                        .font(.body)
+                        .foregroundColor(.secondary)
+                }
+            }
+        }
+        .padding(.leading, 10)
+    }
+}
+
+struct InformationView_Previews: PreviewProvider {
+    static var previews: some View {
+        InformationView()
+    }
+}
diff --git a/Scrumdinger/Views/MeetingFooterView.swift b/Scrumdinger/Views/MeetingFooterView.swift
index f14fd94..8271acb 100644
--- a/Scrumdinger/Views/MeetingFooterView.swift
+++ b/Scrumdinger/Views/MeetingFooterView.swift
@@ -1,10 +1,3 @@
-//
-//  MeetingFooterView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 02.09.23.
-//
-
 import SwiftUI
 
 struct MeetingFooterView: View {
diff --git a/Scrumdinger/Views/MeetingHeaderView.swift b/Scrumdinger/Views/MeetingHeaderView.swift
index 5bf22c2..e2132e2 100644
--- a/Scrumdinger/Views/MeetingHeaderView.swift
+++ b/Scrumdinger/Views/MeetingHeaderView.swift
@@ -1,10 +1,3 @@
-//
-//  MeetingHeaderView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 02.09.23.
-//
-
 import SwiftUI
 
 struct MeetingHeaderView: View {
@@ -52,7 +45,7 @@ struct MeetingHeaderView: View {
 
 struct MeetingHeaderView_Previews: PreviewProvider {
     static var previews: some View {
-        MeetingHeaderView(secondsElapsed: 60, secondsRemaining: 180, theme: .bubblegum)
+        MeetingHeaderView(secondsElapsed: 60, secondsRemaining: 180, theme: .green)
             .previewLayout(.sizeThatFits)
     }
 }
diff --git a/Scrumdinger/Views/MeetingTimerView.swift b/Scrumdinger/Views/MeetingTimerView.swift
index 3bcc4e2..f8246c5 100644
--- a/Scrumdinger/Views/MeetingTimerView.swift
+++ b/Scrumdinger/Views/MeetingTimerView.swift
@@ -1,10 +1,3 @@
-//
-//  MeetingTimerView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 03.09.23.
-//
-
 import SwiftUI
 
 struct MeetingTimerView: View {
diff --git a/Scrumdinger/Views/MeetingView.swift b/Scrumdinger/Views/MeetingView.swift
index b724ca6..f8aa90e 100644
--- a/Scrumdinger/Views/MeetingView.swift
+++ b/Scrumdinger/Views/MeetingView.swift
@@ -1,10 +1,3 @@
-//
-//  ContentView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 30.08.23.
-//
-
 import SwiftUI
 import AVFoundation
 
diff --git a/Scrumdinger/Views/NewScrumSheet.swift b/Scrumdinger/Views/NewScrumSheet.swift
index 3ced866..6d49351 100644
--- a/Scrumdinger/Views/NewScrumSheet.swift
+++ b/Scrumdinger/Views/NewScrumSheet.swift
@@ -1,10 +1,3 @@
-//
-//  NewScrumSheet.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 02.09.23.
-//
-
 import SwiftUI
 
 struct NewScrumSheet: View {
diff --git a/Scrumdinger/Views/ScrumProgressViewStyle.swift b/Scrumdinger/Views/ScrumProgressViewStyle.swift
index 9f0431d..b0e1677 100644
--- a/Scrumdinger/Views/ScrumProgressViewStyle.swift
+++ b/Scrumdinger/Views/ScrumProgressViewStyle.swift
@@ -1,7 +1,3 @@
-/*
-See 3RD-PARTY-LICENSES file for this sample’s licensing information.
-*/
-
 import SwiftUI
 
 struct ScrumProgressViewStyle: ProgressViewStyle {
@@ -29,7 +25,7 @@ struct ScrumProgressViewStyle: ProgressViewStyle {
 struct ScrumProgressViewStyle_Previews: PreviewProvider {
     static var previews: some View {
         ProgressView(value: 0.4)
-            .progressViewStyle(ScrumProgressViewStyle(theme: .buttercup))
+            .progressViewStyle(ScrumProgressViewStyle(theme: .green))
             .previewLayout(.sizeThatFits)
     }
 }
diff --git a/Scrumdinger/Views/ScrumsView.swift b/Scrumdinger/Views/ScrumsView.swift
index 3e22751..3052a5e 100644
--- a/Scrumdinger/Views/ScrumsView.swift
+++ b/Scrumdinger/Views/ScrumsView.swift
@@ -1,41 +1,137 @@
-//
-//  ScrumsView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 31.08.23.
-//
-
 import SwiftUI
 
 struct ScrumsView: View {
+    @Environment(\.colorScheme) var colorScheme
     @Binding var scrums: [DailyScrum]
     @Environment(\.scenePhase) private var scenePhase
     @State private var isPresentingNewScrumView = false
-    let saveAction: ()->Void
+    let saveAction: () -> Void
+    
+    // Key for UserDefaults
+    private let scrumsKey = "ScrumsKey"
+    
+    // Load saved scrums from UserDefaults
+    private func loadScrums() {
+        if let data = UserDefaults.standard.data(forKey: scrumsKey) {
+            do {
+                scrums = try JSONDecoder().decode([DailyScrum].self, from: data)
+            } catch {
+                print("Error decoding scrums: \(error)")
+            }
+        }
+    }
+    
+    // Save scrums to UserDefaults
+    private func saveScrums() {
+        do {
+            let data = try JSONEncoder().encode(scrums)
+            UserDefaults.standard.set(data, forKey: scrumsKey)
+        } catch {
+            print("Error encoding scrums: \(error)")
+        }
+    }
     
     var body: some View {
         NavigationStack {
-            List($scrums) { $scrum in
-                NavigationLink(destination: DetailView(scrum: $scrum)) {
-                    CardView(scrum: scrum)
+            VStack {
+                if scrums.isEmpty {
+                    Text("Add a new Scrum to get started!")
+                        .foregroundColor(.secondary)
+                        .padding()
+                    
+                    Spacer()
+                    Text("Here's a quick guide to help you understand how the tool works!")
+                        .foregroundColor(.secondary)
+                        .padding(.leading, 20)
+                    HStack {
+                        VStack {
+                            HStack {
+                                Image(systemName: "info.circle")
+                                    .foregroundColor(.blue)
+                                    .accessibilityLabel("Information")
+                                Text("Click on the information circle on the top left to find out more about what the GCS really is.")
+                                    .foregroundColor(.secondary)
+                                    .padding(.leading, 5)
+                            }
+                            .padding()
+                            HStack {
+                                Image(systemName: "plus")
+                                    .foregroundColor(.blue)
+                                    .accessibilityLabel("New Scrum")
+                                Text("Click on the plus button on the top right to add a new log for the GCS scores of that day.")
+                                    .foregroundColor(.secondary)
+                                    .padding(.leading, 5)
+                            }
+                            .padding()
+                            HStack {
+                                Image(systemName: "square.and.arrow.down")
+                                    .foregroundColor(.blue)
+                                    .accessibilityLabel("Download CSV")
+                                Text("Click on the button below to download all of the GCS logs in a CSV file.")
+                                    .foregroundColor(.secondary)
+                                    .padding(.leading, 5)
+                            }
+                            .padding()
+                            Spacer()
+                        }
+                        Spacer()
+                    }
+                    .padding(.leading, 10)
+                } else {
+                    List {
+                        ForEach(scrums.indices.reversed(), id: \.self) { index in
+                            let scrum = scrums[index]
+                            NavigationLink(destination: DetailView(scrum: $scrums[index])) {
+                                CardView(scrum: scrum)
+                            }
+                            .listRowBackground(scrum.theme.mainColor)
+                        }
+                    }
+                    Spacer()
                 }
-                .listRowBackground(scrum.theme.mainColor)
-            }
-            .navigationTitle("Daily Scrums")
-            .toolbar {
+                
                 Button(action: {
-                    isPresentingNewScrumView = true
+                    DailyScrum.generateAndSaveCSV()
                 }) {
-                    Image(systemName: "plus")
+                    Label("Download CSV", systemImage: "square.and.arrow.down")
+                        .padding()
+                        .background(RoundedRectangle(cornerRadius: 10).foregroundColor(.blue))
+                        .foregroundColor(.white)
+                }
+                .accessibilityLabel("Download CSV")
+                .padding(.bottom, 20)
+            }
+            .navigationTitle("GCS Scores")
+            .onAppear {
+                // Load scrums when the view appears
+                loadScrums()
+            }
+            .toolbar {
+                ToolbarItem(placement: .navigationBarLeading) {
+                    NavigationLink(destination: InformationView()) {
+                        Image(systemName: "info.circle")
+                    }
+                    .accessibilityLabel("Information")
+                }
+                ToolbarItem(placement: .navigationBarTrailing) {
+                    Button(action: {
+                        isPresentingNewScrumView = true
+                    }) {
+                        Image(systemName: "plus")
+                    }
+                    .accessibilityLabel("New Scrum")
                 }
-                .accessibilityLabel("New Scrum")
             }
         }
         .sheet(isPresented: $isPresentingNewScrumView) {
             NewScrumSheet(scrums: $scrums, isPresentingNewScrumView: $isPresentingNewScrumView)
         }
         .onChange(of: scenePhase) { phase in
-            if phase == .inactive { saveAction() }
+            if phase == .inactive {
+                // Save scrums when the app goes inactive
+                saveScrums()
+                saveAction()
+            }
         }
     }
 }
diff --git a/Scrumdinger/Views/SpeakerArc.swift b/Scrumdinger/Views/SpeakerArc.swift
index 1988d45..ce7e157 100644
--- a/Scrumdinger/Views/SpeakerArc.swift
+++ b/Scrumdinger/Views/SpeakerArc.swift
@@ -1,10 +1,3 @@
-//
-//  SpeakerArc.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 03.09.23.
-//
-
 import SwiftUI
 
 struct SpeakerArc: Shape {
diff --git a/Scrumdinger/Views/ThemePicker.swift b/Scrumdinger/Views/ThemePicker.swift
deleted file mode 100644
index 7366a6a..0000000
--- a/Scrumdinger/Views/ThemePicker.swift
+++ /dev/null
@@ -1,28 +0,0 @@
-//
-//  ThemePicker.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 01.09.23.
-//
-
-import SwiftUI
-
-struct ThemePicker: View {
-    @Binding var selection: Theme
-    
-    var body: some View {
-        Picker("Theme", selection: $selection) {
-            ForEach(Theme.allCases) { theme in
-                ThemeView(theme: theme)
-                    .tag(theme)
-            }
-        }
-        .pickerStyle(.navigationLink)
-    }
-}
-
-struct ThemePicker_Previews: PreviewProvider {
-    static var previews: some View {
-        ThemePicker(selection: .constant(.periwinkle))
-    }
-}
diff --git a/Scrumdinger/Views/ThemeView.swift b/Scrumdinger/Views/ThemeView.swift
index 900de94..7974eaa 100644
--- a/Scrumdinger/Views/ThemeView.swift
+++ b/Scrumdinger/Views/ThemeView.swift
@@ -1,10 +1,3 @@
-//
-//  ThemeView.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 01.09.23.
-//
-
 import SwiftUI
 
 struct ThemeView: View {
@@ -22,6 +15,6 @@ struct ThemeView: View {
 
 struct ThemeView_Previews: PreviewProvider {
     static var previews: some View {
-        ThemeView(theme: .buttercup)
+        ThemeView(theme: .green)
     }
 }
diff --git a/Scrumdinger/Views/TrailingIconLabelStyle.swift b/Scrumdinger/Views/TrailingIconLabelStyle.swift
index 810e386..6486a2f 100644
--- a/Scrumdinger/Views/TrailingIconLabelStyle.swift
+++ b/Scrumdinger/Views/TrailingIconLabelStyle.swift
@@ -1,10 +1,3 @@
-//
-//  TrailingIconLabelStyle.swift
-//  Scrumdinger
-//
-//  Created by Marcus Gugacs on 31.08.23.
-//
-
 import SwiftUI
 
 struct TrailingIconLabelStyle: LabelStyle {
